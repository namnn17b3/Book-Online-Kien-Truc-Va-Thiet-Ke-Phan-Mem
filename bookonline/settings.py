"""
Django settings for bookonline project.

Generated by 'django-admin startproject' using Django 4.0.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""
import os
from pathlib import Path
# import mimetypes

import pytz

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-dqw&!yn131kesni_n&w2nk)ytlwh932*$n_o$x5gfs$-&2s-=9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# Add for DEBUG = False
# mimetypes.add_type("text/css", ".css", True)
# mimetypes.add_type("text/javascript", ".js", True)

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'rest_framework',
    # 'drf_spectacular',
    'drf_yasg',
    'fe.apps.FeConfig',
    'authen.apps.AuthenConfig',
    'users.apps.UsersConfig',
    'catalog.apps.CatalogConfig',
    'product.apps.ProductConfig',
    'cart.apps.CartConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    # 'whitenoise.middleware.WhiteNoiseMiddleware', # Fix mimetype
]

ROOT_URLCONF = 'bookonline.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bookonline.wsgi.application'


# jwt config
JWT_EXPIRES = 24 * 3600
JWT_HEADER = {
    "alg": "HS256",
    "typ": "JWT"
}
JWT_SECRET_KEY = 'bookonline'

# send mail config
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = 'anhnam2730@gmail.com'
EMAIL_HOST_PASSWORD = 'nngxplqdqheimfoi'

AVATAR_USER_DIR = 'static/user/avatar/'

# same site setting
# SESSION_COOKIE_SAMESITE = None
# CSRF_COOKIE_SAMESITE = None

# CORS setting
# CORS_ALLOWED_ORIGINS = [
#     "http://localhost:5501",
#     "http://localhost:5500",
#     "http://127.0.0.1:5501",
#     "http://127.0.0.1:5500",
#     "http://127.0.0.1:80",
# ]
CORS_ALLOW_ALL_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_METHODS = [
    "DELETE",
    "GET",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
    "HEAD",
    "POKE",
]

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

# settings.py

DATABASES = {
    'default': {
        'ENGINE': 'djongo',
        'NAME': 'bookonline',
        'ENFORCE_SCHEMA': False,
        # 'USER': 'namnn17b3',
        # 'PASSWORD': '12345678',
        # 'HOST': 'localhost',
        # 'PORT': '27017',
        'CLIENT': {
            'host': 'mongodb://namnn17b3:12345678@localhost:27017/bookonline?authSource=bookonline'
        },
    },
    'mongodb': {
        'ENGINE': 'djongo',
        'NAME': 'bookonline',
        'ENFORCE_SCHEMA': False,
        # 'USER': 'namnn17b3',
        # 'PASSWORD': '12345678',
        # 'HOST': 'localhost',
        # 'PORT': '27017',
        'CLIENT': {
            'host': 'mongodb://namnn17b3:12345678@localhost:27017/bookonline?authSource=bookonline'
        },
    },
    'mysql': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'bookonline',
        'USER': 'root',
        'PASSWORD': '17195802',
        'HOST': 'localhost',
        'PORT': '3306',
    },
}

# multi database config
DATABASE_ROUTERS = [
    'bookonline.database_router.UsersRouter',
    'bookonline.database_router.ProductRouter',
    'bookonline.database_router.CatalogRouter',
    'bookonline.database_router.CartRouter',
]

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Ho_Chi_Minh'

USE_I18N = True

USE_TZ = True

MAX_LEN_ITEMS_REQUEST_DTO = 20

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

# static folder in each app if only config STATIC_URL:
# app
#   static
#       image
#       css
#       js
STATIC_URL = '/bookonline/static/'

# static folder in outline each app:
# app1
# app2
# static
#   css
#   js
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
    # ...
]

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

TIME_ZONE_APP = pytz.timezone(TIME_ZONE)

# drf_spectaculer config
# REST_FRAMEWORK = {
#     'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
# }

# SPECTACULAR_SETTINGS = {
#     'TITLE': 'Book Online API Swagger',
#     'DESCRIPTION': 'swagger apis doc for Book Online',
#     'VERSION': '1.0.0',
#     'SERVE_INCLUDE_SCHEMA': False,
# }

# drf-yasg config
# SWAGGER_SETTINGS = {
#     'STATIC_URL': '',
# }
